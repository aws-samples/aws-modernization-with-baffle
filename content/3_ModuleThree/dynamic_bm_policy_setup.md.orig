---
title: "Setup Encryption Policies" # MODIFY THIS TITLE IF APPLICABLE
chapter: true
weight: 2 
---
# Lab 2 - No-code Application Encryption and Dynamic Masking

The Baffle policies have already been created by CloudFormation, so this section may be skipped for this lab.  However, the process for creating them is outlined here for learning and/or future reference.

## Setup RBAC rules

In this session we will be setting up 
1. RBAC rules for users "harry", "sally" and "ron"
2. RBAC rules in Baffle for role based access. 

In this lab, the Data sources will be defined. The sample fields like CCN and SSN and user like harry, sally, ron are already setup up by cloudformation scripts for convenience.  We will walk through RBAC setup using these fields and users as examples.  

**Define data sources.**

1. In the left navigation pane, under Database Proxies, click Data Sources
2. In the top right, click Create + to go to the Data Source Details page
3. Provide a friendly name in the “Name” field.  In this example, enter “ccn”
4. Under Fields select the Database Columns box
5. In the Database Reference drop-down, select the name of the target database
6. In the bottom right, click Next to go to the Configure Dataset page
7. Across the top are four options: Direct Input, Import, Search, and Browse.  The search and browse options are only available if the target database has existing data.  In this example, the data has not been entered in the database yet, so these options won’t work.  The Import option is for using a CSV file to bulk import database columns.  We will be using the Direct Input option to manually enter the database columns that we intend to encrypt.
8. In the Database Name field, enter the name of the database.  In this example use “target”
9. In the Schema Name field, enter the name of the database schema.  In this example use “public”
10. In the Object Type drop down, select Table
11. In Table Name enter the table. In this example, enter customers
12. In Column Name enter the column. In this example, enter “ccn”
13. In Datatype enter the data type.  In this example, enter “varchar(50)”
14. Click the box that says Add to selected columns and note the definition of this column appears in the right pane.
15. In the bottom right, click Create. You will be returned to the Data Sources list
16. Repeat steps 2 to 16 exactly with two exceptions. In step 3, name this data source “ssn” and in step 12, name the column “ssn”
17. At this point, “ccn” and “ssn” datasources should be defined:




**Define Data Protection Policy implementing format preserving encryption (FPE)**
1.  In the left navigation pane, under Database Proxies, click **Data Protection**
2.  In the top right, click **Create +** to go to the Data Source page
3.  In _Policy Name_ enter a friendly name.  In this example, use “ccn-fpe-cc”
4.  Under _Select Data source_ check the little box next to “ccn”
5.  In the bottom right, click **Next** to got to the encryption page
6.  Click the **Format Preserving Encryption** box
7.  In the _FPE Format_ drop down, select **fpe-cc**. This option is specifically designed for credit card numbers.  It knows to ignore dashes and spaces and the resulting ciphertext will pass the Luhn algorithm.
8.  Under _Encryption Key_ click the **Global** box
9.  Under _Select KEK_ Select the radio button next to the “alias/demo-workshop-1-baffle-shield-key-1” key encryption key.
10.  To the right of the KEK name is a drop down to select the corresponding DEK.  For this example, click “baffle-dek-641”
11.  In the bottom right, click **Next** to go to the Access Control page
12.  Do not select anything on this page because access controls will be set-up later in the dynamic data masking part of this demo. Rather, in the bottom right, click **Create.** This data protection policy will be created.
13.  Repeat steps b through l exactly with the three exceptions. In step c, the _Policy Name_ is “ssn-fpe-decimal”.  In step d, under _Select Data source_ check the little box next to “ssn”, and in step g, under _FPE Format_ drop down, select **fpe-decimal**. This encrypts only numbers from the plain text and ignores dashes and spaces.
14.  At this point, “ccn-fpe-cc” and “ssn-fpe-decimal” data protection policies should be defined:

**Deploy the Data Protection Policies to Shield**

1.  In the left navigation pane, under Database Proxies, click **Clusters**
2.  In the list, select the already created cluster listed as **proxy_dynamic_mask**. This will take you to the Overview tab. Along the top of the center pane is Overview, Instances, Data Protection, and Deployments tabs.
3.  Click the **Instances** tab and check to see if an instance of “Type” = “DB_PROXY” and its status is “Running” and “Deployment Status” is “UP TO DATE”

Figure 6. Baffle Shield is Connected

1.  Click the **Data Protection** tab.
2.  In the upper right, click **Deployment +**
3.  In the _Action_ drop down select **Add Policies**
4.  In the _Add New Data Protection Policies section_, check the box for the **ccn-fpe-cc** and **ssn-fpe-decimal** Policies.
5.  viii.In the right pane at the top, in the _Deployment Name_ field we can enter a friendly name.  For this example, enter “deploy_encryption_policies”
6.  Enter any description desired in the _Description_ field.
7.  In the bottom right, click **Create.** The window will return to the Data Protection tab.
8.  Click the **Instances** tab and check to see if an instance of “Type” = “DB_PROXY” and its status is “Running” and “Deployment Status” is “UP TO DATE”



